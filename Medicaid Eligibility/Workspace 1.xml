<export><workspace name="Workspace 1"><query name="what rule caused ineligible" focus="false" listorder="1" taborder="1" active="true" database="16007430037017962658" server="15854762947497005469" database-name="corticonml-content" server-name="corticonml" mode="sql" optimize="1">-- Find the specific rule message that made Etienne Arnow income-ineligible
SELECT
  i.first,
  i.last,
  p.group AS consideredGroup,
  m.text AS reason,
  m.ruleSheet,
  m.rule
FROM household.individual AS i
JOIN household.population AS p ON i.ssn = p.individual_ssn
JOIN household.Messages AS m ON i.uri = m.uri
WHERE i.first = 'Etienne' AND i.last = 'Arnow'
  AND p.incomeIneligible = 'true'
  AND m.text LIKE '%income eligibility requirements%';</query><query name="eligibility for X household" focus="false" listorder="2" taborder="3" active="true" database="16007430037017962658" server="15854762947497005469" database-name="corticonml-content" server-name="corticonml" mode="sql" optimize="1">-- Replace '353021' with the householdId you want to investigate
SELECT
  i.first,
  i.last,
  i.age,
  i.highestFavorable,
  p.group AS consideredGroup,
  p.incomeIneligible
FROM household.individual AS i
LEFT JOIN household.population AS p ON i.ssn = p.individual_ssn
WHERE i.householdId = '353021'
ORDER BY
  i.first,
  p.favorability DESC;</query><query name="count eligibility path/state" focus="false" listorder="3" taborder="4" active="true" database="16007430037017962658" server="15854762947497005469" database-name="corticonml-content" server-name="corticonml" mode="sql" optimize="1">SELECT
  h.state,
  i.highestFavorable AS program,
  COUNT(i.ssn) AS numberOfIndividuals
FROM household.household AS h
JOIN household.individual AS i ON h.householdId = i.householdId
WHERE i.highestFavorable IS NOT NULL
GROUP BY
  h.state,
  i.highestFavorable
ORDER BY
  h.state,
  numberOfIndividuals DESC;</query><query name="near miss households" focus="false" listorder="4" taborder="5" active="true" database="16007430037017962658" server="15854762947497005469" database-name="corticonml-content" server-name="corticonml" mode="sql" optimize="1">-- Finds individuals whose household income is no more than 10% above the limit
SELECT
  i.householdId,
  i.first,
  i.last,
  h.annualIncome,
  p.group,
  CAST(h.povertyGuideline AS DECIMAL(18, 2)) * CAST(p.magiIncomePercent AS DECIMAL(18, 2)) AS incomeLimit,
  (CAST(h.annualIncome AS DECIMAL(18, 2)) / (CAST(h.povertyGuideline AS DECIMAL(18, 2)) * CAST(p.magiIncomePercent AS DECIMAL(18, 2)))) AS percentOfLimit
FROM household.individual AS i
JOIN household.household AS h ON i.householdId = h.householdId
JOIN household.population AS p ON i.ssn = p.individual_ssn
WHERE
  i.highestFavorable IS NULL AND p.incomeIneligible = 1
  -- Check if income is between 100% and 110% of the calculated limit
  AND (CAST(h.annualIncome AS DECIMAL(18, 2)) / (CAST(h.povertyGuideline AS DECIMAL(18, 2)) * CAST(p.magiIncomePercent AS DECIMAL(18, 2)))) BETWEEN 1.0 AND 1.10
ORDER BY
  percentOfLimit;</query><query name="Mismatched Eligibility Considerations" focus="false" listorder="5" taborder="2" active="true" database="16007430037017962658" server="15854762947497005469" database-name="corticonml-content" server-name="corticonml" mode="sql" optimize="1">SELECT
  i.householdId,
  i.first,
  i.last,
  i.age,
  p.group AS mismatchedGroup
FROM household.individual AS i
JOIN household.population AS p ON i.ssn = p.individual_ssn
WHERE
  (p.group = 'Infants (0-1)' AND i.age &gt; 1) OR
  (p.group = 'Young Children (Ages 1-5)' AND (i.age &lt; 1 OR i.age &gt; 5)) OR
  (p.group = 'Older Children (Ages 6-18)' AND (i.age &lt; 6 OR i.age &gt; 18))
ORDER BY
  i.householdId;</query><query name="ineligible parents by age bracket" focus="false" listorder="6" taborder="6" active="true" database="16007430037017962658" server="15854762947497005469" database-name="corticonml-content" server-name="corticonml" mode="sql" optimize="1">SELECT
  IneligibleParents.ageBracket,
  COUNT(IneligibleParents.ssn) AS numberOfIneligibleIndividuals
FROM (
  SELECT
    CASE
      WHEN i.age BETWEEN 18 AND 25 THEN '18-25'
      WHEN i.age BETWEEN 26 AND 40 THEN '26-40'
      WHEN i.age BETWEEN 41 AND 55 THEN '41-55'
      ELSE '56+'
    END AS ageBracket,
    i.ssn
  FROM household.individual AS i
  JOIN household.population AS p ON i.ssn = p.individual_ssn
  WHERE
    p."group" = 'Parents and Caretaker Relatives' AND p.incomeIneligible = 1
) AS IneligibleParents
GROUP BY
  IneligibleParents.ageBracket
ORDER BY
  IneligibleParents.ageBracket;</query><query name="Highest Potential Coverage Expansion" focus="true" listorder="7" taborder="7" active="true" database="16007430037017962658" server="15854762947497005469" database-name="corticonml-content" server-name="corticonml" mode="sql" optimize="1">SELECT
  h.state,
  COUNT(DISTINCT h.householdId) AS potentialNewHouseholds
FROM household.household AS h
JOIN household.individual AS i
  ON h.householdId = i.householdId
JOIN household.population AS p
  ON i.ssn = p.individual_ssn
WHERE
  -- 1. Focus on the specific eligibility group to model
  p."group" = 'Parents and Caretaker Relatives'
  AND p.incomeIneligible = 1
  -- 2. Only include households where no one is currently eligible for anything
  AND h.householdId NOT IN (
    SELECT householdId
    FROM household.individual
    WHERE highestFavorable IS NOT NULL
  )
  -- 3. Find households whose income is over the current limit...
  AND CAST(h.annualIncome AS DECIMAL(18, 2)) &gt; (
    CAST(h.povertyGuideline AS DECIMAL(18, 2)) * CAST(p.magiIncomePercent AS DECIMAL(18, 2))
  )
  -- 4. ...but would be UNDER a new, 25% higher limit. (Change 1.25 to 1.10 for a 10% increase, etc.)
  AND CAST(h.annualIncome AS DECIMAL(18, 2)) &lt;= (
    CAST(h.povertyGuideline AS DECIMAL(18, 2)) * CAST(p.magiIncomePercent AS DECIMAL(18, 2)) * 1.25
  )
GROUP BY
  h.state
ORDER BY
  potentialNewHouseholds DESC;</query></workspace></export>
